<UserControl x:Class="SolidSaverWPF.Views.Table.CellView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SolidSaverWPF.Views.Table"
             xmlns:tablemodel="clr-namespace:SolidSaverWPF.ViewModel.Table"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=tablemodel:CellViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="30" d:DesignWidth="200">

    <UserControl.Resources>
    <local:NullToColorConverter x:Key="nulltocolorconverter"/>
    <local:ValueTextColorConverter x:Key="valueTextcolorconverter"/>

        <SolidColorBrush x:Key="onFocusedTempBG" Color="White" Opacity="0.7"/>
    </UserControl.Resources>

    <!--<UserControl.DataContext>
        <tablemodel:CellViewModel/>
    </UserControl.DataContext>-->
    
       
        <!--d:DataContext="{d:DesignInstance Type=tablemodel:CellViewModel, IsDesignTimeCreatable=True}"-->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="80"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <TextBlock VerticalAlignment="Center"
            Margin="2"
            Text="{Binding Name}"/>

        <Grid Grid.Column="1" >
            <TextBox
                x:Name="Value"
                Text="{Binding Text, Mode=OneWay , FallbackValue=No data}"
                IsReadOnly="True">
                <TextBox.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsNotSaved}" Value="true">
                                <Setter Property="TextBox.Background" Value="LightYellow"/>
                                <Setter Property="TextBox.Foreground" Value="LightGray"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

                <!--GotFocus="PropCurrentValue_GotFocus"
                LostFocus="PropCurrentValue_LostFocus"-->
            <TextBox 
                x:Name="PropCurrentValue"
                
                IsReadOnly="{Binding IsReadOnly}"
                Text="{Binding TempText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                <TextBox.Style>
                    <Style>
                        <Style.Triggers>
                            <!--<MultiTrigger>

                                <MultiTrigger.Conditions>
                                    <Condition Property="TextBox.IsReadOnly" Value="False"/>
                                    --><!--<Condition Property="TextBox.IsFocused" Value="True"/>--><!--
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="TextBox.Background" 
                                            Value="{StaticResource onFocusedTempBG}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>-->
                            <Trigger Property="TextBox.IsFocused" Value="True">
                                <Setter Property="TextBox.Background" Value="{StaticResource onFocusedTempBG}"/>
                            </Trigger>
                            <Trigger Property="TextBox.IsFocused" Value="False">
                                <Setter Property="TextBox.Background" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Name="updateCommandName" Header="Обновить" Command="{Binding UpdatePropCommand}" />
                        <MenuItem Name="writeCommandName" Header="Записать" Command="{Binding WriteCommand}"/>
                        <MenuItem Header="Скопировать" ToolTip="DClick" Command="{Binding CopyValToTextCommand}"/>
                        <MenuItem  Header="Очистить" Command="{Binding ClearTempTextCommand}"/>
                    </ContextMenu>
                </TextBox.ContextMenu>
            </TextBox>
        </Grid>
        <Border Grid.ColumnSpan="2"
            BorderThickness="0, 1" BorderBrush="{Binding BorderColorBrush}"/>
    </Grid>
</UserControl>
